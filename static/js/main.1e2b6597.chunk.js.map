{"version":3,"sources":["components/Navigation/Navigation.tsx","components/HomePage/HomePage.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","api.ts","types/NotificationMessage.ts","components/Notification/Notification.tsx","components/Loader/Loader.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["getLinkClass","isActive","classNames","Navigation","className","role","to","HomePage","PersonLink","person","people","onPersonClick","name","slug","personExists","find","user","isWoman","sex","linkUrl","onClick","PeopleTable","useState","selectedPersonSlug","setSelectedPersonSlug","handlePersonClick","findParentSlug","handleLink","map","born","died","motherName","fatherName","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","NotificationMessage","Notification","type","dataCy","peopleLoadingError","Loader","PeoplePage","setPeople","loadingError","setLoadingError","noPeopleOnServer","setNoPeopleOnServer","isLoading","setIsLoading","noError","errorType","setErrorType","useEffect","data","length","noPeopleMessage","catch","finally","NotFoundPage","App","path","element","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.1e2b6597.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nconst getLinkClass = (\n  { isActive }: { isActive: boolean },\n) => classNames('navbar-item', {\n  'is-active': isActive,\n  'has-background-grey-lighter': isActive,\n});\n\nexport const Navigation = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          to=\"/\"\n          className={getLinkClass}\n        >\n          Home\n        </NavLink>\n        <NavLink\n          to=\"/people\"\n          className={getLinkClass}\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","export const HomePage = () => (\n  <div className=\"section\">\n    <div className=\"container\">\n      <h1 className=\"title\">Home Page</h1>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Pick<Person, 'name' | 'slug'>;\n  people: Person[],\n  onPersonClick: (slug: string) => void;\n}\n\nexport const PersonLink: React.FC<Props> = ({\n  person,\n  people,\n  onPersonClick,\n}) => {\n  const { name, slug } = person;\n\n  const personExists = people.find(user => user.name === person.name);\n\n  const isWoman = people.find(\n    user => user.name === person.name && user.sex === 'f',\n  );\n  const linkUrl = `/people/${slug}`;\n\n  const handlePersonClick = () => {\n    onPersonClick(slug);\n  };\n\n  return (\n    (personExists)\n      ? (\n        <Link\n          to={linkUrl}\n          onClick={handlePersonClick}\n          className={isWoman ? 'has-text-danger' : ''}\n        >\n          {name}\n        </Link>\n      )\n      : (\n        <span>{person.name}</span>\n      )\n  );\n};\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ninterface Props {\n  people: Person[];\n}\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n}) => {\n  const [\n    selectedPersonSlug,\n    setSelectedPersonSlug,\n  ] = useState<string | null>(null);\n\n  const handlePersonClick = (slug: string) => {\n    setSelectedPersonSlug(slug === selectedPersonSlug ? null : slug);\n  };\n\n  const findParentSlug = (name: string) => {\n    return people.find(user => user.name === name)?.slug || '';\n  };\n\n  const handleLink = (name: string | null) => {\n    return (\n      (name ? (\n        <PersonLink\n          person={{\n            name,\n            slug: findParentSlug(name),\n          }}\n          people={people}\n          onPersonClick={handlePersonClick}\n        />\n      ) : (\n        '-'\n      ))\n    );\n  };\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        <table\n          data-cy=\"peopleTable\"\n          className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n        >\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Sex</th>\n              <th>Born</th>\n              <th>Died</th>\n              <th>Mother</th>\n              <th>Father</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {people.map(({\n              slug,\n              name,\n              sex,\n              born,\n              died,\n              motherName,\n              fatherName,\n            }) => (\n              <tr\n                key={slug}\n                data-cy=\"person\"\n                className={\n                  classNames({\n                    'has-background-warning': slug === selectedPersonSlug,\n                  })\n                }\n              >\n                <td>\n                  <PersonLink\n                    person={{ name, slug }}\n                    people={people}\n                    onPersonClick={handlePersonClick}\n                  />\n                </td>\n                <td>\n                  {sex}\n                </td>\n                <td>{born}</td>\n                <td>{died}</td>\n                <td>\n                  {handleLink(motherName)}\n                </td>\n                <td>\n                  {handleLink(fatherName)}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export enum NotificationMessage {\n  'noError' = '',\n  'peopleLoadingError' = 'Something went wrong',\n  'noPeopleMessage' = 'There are no people on the server',\n}\n","// eslint-disable-next-line no-lone-blocks\nimport React from 'react';\nimport { NotificationMessage } from '../../types/NotificationMessage';\n\ninterface Props {\n  type: NotificationMessage;\n}\n\nexport const Notification: React.FC<Props> = ({ type }) => {\n  const dataCy = (type === NotificationMessage.peopleLoadingError)\n    ? 'peopleLoadingError'\n    : 'noPeopleMessage';\n\n  return (\n    <p data-cy={dataCy} className=\"has-text-danger\">\n      {type}\n    </p>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Person } from '../../types';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\nimport { getPeople } from '../../api';\nimport { NotificationMessage } from '../../types/NotificationMessage';\nimport { Notification } from '../Notification/Notification';\nimport { Loader } from '../Loader';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loadingError, setLoadingError] = useState<boolean>(false);\n  const [noPeopleOnServer, setNoPeopleOnServer] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [\n    errorType,\n    setErrorType,\n  ] = useState<NotificationMessage>(NotificationMessage.noError);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then((data) => {\n        if (data.length === 0) {\n          setNoPeopleOnServer(true);\n          setErrorType(NotificationMessage.noPeopleMessage);\n        }\n\n        setPeople(data);\n        setIsLoading(false);\n      })\n      .catch(() => {\n        setLoadingError(true);\n        setErrorType(NotificationMessage.peopleLoadingError);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">People Page</h1>\n\n        {isLoading && <Loader />}\n        {!isLoading && (loadingError || noPeopleOnServer) && (\n          <Notification type={errorType} />\n        )}\n        {!isLoading && !loadingError && !noPeopleOnServer && (\n          <PeopleTable people={people} />\n        )}\n      </div>\n    </div>\n  );\n};\n","export const NotFoundPage = () => (\n  <div className=\"section\">\n    <div className=\"container\">\n      <h1 className=\"title\">Page not found</h1>\n    </div>\n  </div>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\n\nimport './App.scss';\nimport { Navigation } from './components/Navigation/Navigation';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n    <main className=\"section\">\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n        <Route path=\"/people\" element={<PeoplePage />} />\n        <Route path=\"/people/:slug\" element={<PeoplePage />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Routes>\n    </main>\n\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}